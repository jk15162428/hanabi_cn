"use strict";(self.webpackChunkhanabi_github_io=self.webpackChunkhanabi_github_io||[]).push([[8256],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3331:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(3117),a=(r(7294),r(3905));const i={id:"dual-color-6-suits",title:"Dual-Color (6 Suits)"},o=void 0,l={unversionedId:"variant-specific/dual-color-6-suits",id:"variant-specific/dual-color-6-suits",title:"Dual-Color (6 Suits)",description:'These conventions apply to the "Dual-Color (6 Suits)" variant.',source:"@site/docs/variant-specific/dual-color-6-suits.mdx",sourceDirName:"variant-specific",slug:"/variant-specific/dual-color-6-suits",permalink:"/hanabi_cn/docs/variant-specific/dual-color-6-suits",draft:!1,editUrl:"https://github.com/jk15162428/hanabi_cn/edit/master/docs/variant-specific/dual-color-6-suits.mdx",tags:[],version:"current",frontMatter:{id:"dual-color-6-suits",title:"Dual-Color (6 Suits)"},sidebar:"mainSidebar",previous:{title:"Dual-Color (3 Suits)",permalink:"/hanabi_cn/docs/variant-specific/dual-color-3-suits"},next:{title:"Duck",permalink:"/hanabi_cn/docs/variant-specific/duck"}},c={},s=[{value:"The Negative Prompt",id:"the-negative-prompt",level:3},{value:"Order Chop Move Change",id:"order-chop-move-change",level:3}],u={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'These conventions apply to the "Dual-Color (6 Suits)" variant.'),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"the-negative-prompt"},"The Negative Prompt"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In this variant, since negative color information conveys just as much information as positive color information, you should include that when deciding which card to play into a ",(0,a.kt)("em",{parentName:"li"},"Prompt"),"."),(0,a.kt)("li",{parentName:"ul"},"For example:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Alice has a red card in slot 1 and a red card in slot 2."),(0,a.kt)("li",{parentName:"ul"},"Alice is ",(0,a.kt)("em",{parentName:"li"},"Prompted")," for a mahogany 2. (Mahogany is composed of red and black.)"),(0,a.kt)("li",{parentName:"ul"},"Normally, Alice would play slot 1, since ",(0,a.kt)("em",{parentName:"li"},"Prompts")," promise the left-most card."),(0,a.kt)("li",{parentName:"ul"},"However, Alice's slot 1 card has no negative clues, and her slot 2 card has a negative yellow clue."),(0,a.kt)("li",{parentName:"ul"},"Thus, this is a ",(0,a.kt)("em",{parentName:"li"},"Negative Prompt")," and Alice plays slot 2 instead of slot 1.")))),(0,a.kt)("h3",{id:"order-chop-move-change"},"Order Chop Move Change"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Normally, ",(0,a.kt)("em",{parentName:"li"},"Order Chop Moves"),', are "turned off" when two different 1\'s have different positive clues on them.',(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},'For example, Order Chop Moves would be "turned off" in the situation where Alice has one 1 has a positive 1 clue on it, and Alice has another 1 with a positive 1 clue on it and a positive red clue on it.'))),(0,a.kt)("li",{parentName:"ul"},'In the "Dual Color (6 Suit)" variant, ',(0,a.kt)("em",{parentName:"li"},"Order Chop Moves")," are never turned off when there are two different 1's, regardless of different positive or negative color clues on them."),(0,a.kt)("li",{parentName:"ul"},'The only exception is when the exact identity of the 1 is known (e.g. from being completely "filled in"). In this situation, ',(0,a.kt)("em",{parentName:"li"},"Order Chop Moves")," are turned off.")))}d.isMDXComponent=!0}}]);